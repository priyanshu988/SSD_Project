{"ast":null,"code":"import { rehype } from 'rehype';\nimport rehypePrism from 'rehype-prism-plus';\nexport var processHtml = function processHtml(html, plugins) {\n  if (plugins === void 0) {\n    plugins = [[rehypePrism, {\n      ignoreMissing: true\n    }]];\n  }\n  return rehype().data('settings', {\n    fragment: true\n  }).use([...plugins]).processSync(\"\" + html).toString();\n};\nexport function htmlEncode(sHtml) {\n  return sHtml.replace(/```(tsx?|jsx?|html|xml)(.*)\\s+([\\s\\S]*?)(\\s.+)?```/g, str => {\n    return str.replace(/[<&\"]/g, c => ({\n      '<': '&lt;',\n      '>': '&gt;',\n      '&': '&amp;',\n      '\"': '&quot;'\n    })[c]);\n  }).replace(/[<&\"]/g, c => ({\n    '<': '&lt;',\n    '>': '&gt;',\n    '&': '&amp;',\n    '\"': '&quot;'\n  })[c]);\n}\nexport function stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n}","map":{"version":3,"mappings":"AACA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAeC,OAAf,EAAqF;EAAA,IAAtEA,OAAsE;IAAtEA,OAAsE,GAA7C,CAAC,CAACH,WAAD,EAAc;MAAEI,aAAa,EAAE;IAAjB,CAAd,CAAD,CAA6C;EAAA;EAC9G,OAAOL,MAAM,GACVM,IADI,CACC,UADD,EACa;IAAEC,QAAQ,EAAE;EAAZ,CADb,EAEJC,GAFI,CAEA,CAAC,GAAGJ,OAAJ,CAFA,EAGJK,WAHI,MAGWN,IAHX,EAIJO,QAJI,EAAP;AAKD,CANM;AAQP,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAAmC;EACxC,OAAOA,KAAK,CACTC,OADI,CACI,qDADJ,EAC4DC,GAAD,IAAiB;IAC/E,OAAOA,GAAG,CAACD,OAAJ,CACL,QADK,EAEJE,CAAD,IAAgB,CAAC;MAAE,KAAK,MAAP;MAAe,KAAK,MAApB;MAA4B,KAAK,OAAjC;MAA0C,KAAK;IAA/C,CAAD,EAAsFA,CAAtF,CAFX,CAAP;EAID,CANI,EAOJF,OAPI,CAQH,QARG,EASFE,CAAD,IAAgB,CAAC;IAAE,KAAK,MAAP;IAAe,KAAK,MAApB;IAA4B,KAAK,OAAjC;IAA0C,KAAK;EAA/C,CAAD,EAAsFA,CAAtF,CATb,CAAP;AAWD;AAED,OAAO,SAASC,eAAT,CAAyBC,CAAzB,EAAsE;EAC3EA,CAAC,CAACD,eAAF;EACAC,CAAC,CAACC,cAAF;AACD","names":["rehype","rehypePrism","processHtml","html","plugins","ignoreMissing","data","fragment","use","processSync","toString","htmlEncode","sHtml","replace","str","c","stopPropagation","e","preventDefault"],"sources":["/home/priyanshu/Documents/Projects SSD/SSD_Project/node_modules/@uiw/react-textarea-code-editor/src/utils.ts"],"sourcesContent":["import { PluggableList } from 'unified';\nimport { rehype } from 'rehype';\nimport rehypePrism from 'rehype-prism-plus';\n\nexport const processHtml = (html: string, plugins: PluggableList = [[rehypePrism, { ignoreMissing: true }]]) => {\n  return rehype()\n    .data('settings', { fragment: true })\n    .use([...plugins])\n    .processSync(`${html}`)\n    .toString();\n};\n\nexport function htmlEncode(sHtml: string) {\n  return sHtml\n    .replace(/```(tsx?|jsx?|html|xml)(.*)\\s+([\\s\\S]*?)(\\s.+)?```/g, (str: string) => {\n      return str.replace(\n        /[<&\"]/g,\n        (c: string) => (({ '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' } as Record<string, string>)[c]),\n      );\n    })\n    .replace(\n      /[<&\"]/g,\n      (c: string) => (({ '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' } as Record<string, string>)[c]),\n    );\n}\n\nexport function stopPropagation(e: React.KeyboardEvent<HTMLTextAreaElement>) {\n  e.stopPropagation();\n  e.preventDefault();\n}\n"]},"metadata":{},"sourceType":"module"}